<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: nginx | Teracy's Blog]]></title>
  <link href="http://blog.teracy.com/tags/nginx/atom.xml" rel="self"/>
  <link href="http://blog.teracy.com/"/>
  <updated>2017-08-27T02:32:49+00:00</updated>
  <id>http://blog.teracy.com/</id>
  <author>
    <name><![CDATA[Teracy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Multiple Github custom domains]]></title>
    <link href="http://blog.teracy.com/2013/08/08/multiple-github-custom-domains/"/>
    <updated>2013-08-08T00:00:00+00:00</updated>
    <id>http://blog.teracy.com/2013/08/08/multiple-github-custom-domains</id>
    <content type="html"><![CDATA[<p>Today we&rsquo;re going to share with you the way to use multiple github custom domains as we did with our
<code>teracy-official</code> organization account.</p>

<p>As we know, there are two types of github pages: user/ organization pages and project pages <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>.
Our organization account is located at: <a href="https://github.com/teracy-official">https://github.com/teracy-official</a></p>

<p>By default, <code>http://teracy-official.github.io</code> will point to <code>teracy-official.github.io</code>&rsquo;s <code>master</code>
branch. And <code>teracy-official.github.io/&lt;project_name&gt;</code> will point to the project&rsquo;s <code>gh-pages</code> branch
if it&rsquo;s available.</p>

<p>With our requirements, we don&rsquo;t want to use <code>http://teracy-official.github.io</code> but
<code>http://teracy.com</code> and <code>http://teracy.org</code> only. That&rsquo;s why we have to setup multiple github custom
domains <sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>.</p>

<!-- more -->


<h2>1. Problems</h2>

<p>From the very first days, we setup <code>blog.teracy.com</code> to map to the organization page at
<code>teracy-official.github.io</code> repository. We could get what we want by:</p>

<ul>
<li>adding CNAME <code>blog.teracy.com</code> with alias <code>teracy-official.github.io</code> via DNS manager</li>
<li>adding CNAME file with &lsquo;blog.teracy.com&rsquo; content to <code>teracy-official.github.io/tree/master/CNAME</code></li>
</ul>


<p>However, by default, this domain will be used for all other project pages if you don&rsquo;t specify
th project custom domains.</p>

<p>For example, by setting up like above and we have <code>teracy-dev</code> project with <code>gh-pages</code> branch.
When we access <code>teracy-official.github.io/teracy-dev</code>, it will be redirected to
<code>blog.teracy.com/teracy-dev</code> project page by github custom domain mechanism, and this was not what
we expected.</p>

<p>We also want <code>teracy-dev</code> project page should be served by <code>http://teracy-dev.teracy.org</code>, it&rsquo;s also
every easy just configure CNAME and add CNAME file to <code>gh-pages</code> branch like we did with the blog
configuration above:</p>

<ul>
<li>add CNAME <code>teracy-dev.teracy.org</code> with alias <code>teracy-official.github.io</code></li>
<li>add CNAME file with &lsquo;teracy-dev.teracy.org&rsquo; content to <code>teracy-dev/tree/gh-pages/CNAME</code></li>
</ul>


<p>Wait for DNS change to be updated and access <code>teracy-dev.teracy.org</code>, it should point to
<code>teracy-dev/tree/gh-pages</code> site.</p>

<p>There is a minor problem though:
<code>teracy-official.github.io/teracy-dev</code> will not be automatically redirected to
<a href="http://teracy-dev.teracy.org">http://teracy-dev.teracy.org</a></p>

<p>If we configure the root domain <a href="http://teracy.org">http://teracy.org</a> to map to <code>teracy-official.github.io</code> page,
the link <code>teracy-official.github.io/teracy-dev</code> will be redirected to <code>teracy.org/teracy-dev</code> by
github custom domain mechanism. With this approach, an issue is raised: it will also introduce more
duplicated links between <code>teracy-dev.teracy.org</code> and <code>teracy.org/teracy-dev</code>. This duplicated issue
should be avoided.</p>

<p>There is a workaround that you could use JavaScript location checking. However, well, it&rsquo;s not
flexible enough and does not work well with search engines.</p>

<p>So we decided to have a router on <code>teracy.org</code> by using <code>nginx</code>.</p>

<h2>2. Solution with <code>nginx</code> server</h2>

<p>2.1. Requirements</p>

<p>Actually, before setting up our custom domains, existing links exists and we have to maintain these
by redirecting. We have these requirement rules:</p>

<ul>
<li>By adding &lsquo;teracy.org&rsquo; to teracy-official.github.io/tree/master/CNAME => by github mechanism:</li>
</ul>


<p><code>
teracy-official.github.io/* -&gt; teracy.org/*
</code></p>

<ul>
<li>Our nginx rules:</li>
</ul>


<p>```
teracy-official.github.io/teracy-dev/<em> &ndash;> teracy-dev.teracy.org/</em></p>

<p>teracy-official.github.io/teracy-official-blog/<em> &ndash;> blog.teracy.com/</em>
```</p>

<ul>
<li>Fix existing links by redirecting as these links are already indexed by search engines:</li>
</ul>


<p><code>
teracy-official.github.io/2013/08/02/teracy-hello-world/ -&gt; blog.teracy.com/2013/08/02/teracy-hello-world/
teracy-official.github.io/2013/08/03/how-to-start-blogging-easily-with-octopress-and-teracy-dev/ -&gt; blog.teracy.com/2013/08/03/how-to-start-blogging-easily-with-octopress-and-teracy-dev/
</code></p>

<p>The detailed requirements are at: <a href="https://github.com/teracy-official/teracy-official-blog/issues/20">https://github.com/teracy-official/teracy-official-blog/issues/20</a></p>

<p>2.2. How to setup and configure <code>nginx</code> server</p>

<p>With the above requirement rules, this is how to configure our <code>nginx</code> server.</p>

<p>Create a new nginx host file at <code>/etc/nginx/sites-available/teracy.org</code> and symlink it to
<code>/etc/nginx/sites-enable/teracy.org</code> with the content as below:</p>

<p>```
server {
  listen 80;
  server_name teracy.org;</p>

<p>  location / {</p>

<pre><code># redirect to teracy-dev.teracy.org if match below regex
rewrite  ^/teracy-dev(/.*)?$  http://teracy-dev.teracy.org$1  break;

# redirect to blog.teracy.com if match below regex
rewrite  ^/teracy-official-blog(/.*)?$  http://blog.teracy.com$1  break;

# Otherwise redirect to blog.teracy.com
rewrite  ^/(.*)$  http://blog.teracy.com/$1  break;
</code></pre>

<p>  }
}
```</p>

<p>Just by applying rules from <code>HttpRewriteModule</code> <sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>, we could solve the problems easily.</p>

<p>That&rsquo;s it. Have a nice day and happy hacking!</p>

<p>P/S: Sure that you can have many other solutions like Apache + Modrewrite, etc., but to us, <code>nginx</code>
is more lightweight, simpler and flexible enough. We also use <code>nginx</code> to proxy and protect many
other HTTP(S) resources for our projects.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>https://help.github.com/articles/user-organization-and-project-pages<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>https://help.github.com/articles/setting-up-a-custom-domain-with-pages<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>http://wiki.nginx.org/HttpRewriteModule<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
